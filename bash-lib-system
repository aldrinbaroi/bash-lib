#!/bin/bash
#
# Bash system library
#
# Depends on bash-lib-logging
# 

source lib/bash-lib-logging

__initSystemLibrary()
{
	(( ${__SYSTEM_LIB_INITIALIZED__} )) && return
	readonly __SYSTEM_LIB_INITIALIZED__=1

	local _OS_TYPE=""
	local _LINUX_DISTRO="" 

	case "${OSTYPE}" in
		linux*)
			_OS_TYPE="linux"
			;;
		solaris*)
			_OS_TYPE="solaris"
			;;
		darwin*)
			_OS_TYPE="darwin"
			;;
		*)
			_OS_TYPE="${OSTYPE}"
			;;
	esac 
	_LINUX_DISTRO=$(hostnamectl | grep "Operating System" | awk '{print $3}')
	if (( $? )); then
		_LINUX_DISTRO=$(cat /etc/os-release | grep "^NAME" | sed -e 's/"//g' -e 's/NAME=//' | awk '{print $1}')
		if (( $? )); then
			_LINUX_DISTRO=$(cat /etc/lsb-release | grep "DISTRIB_ID" | sed -e 's/DISTRIB_ID=//')
			if (( $? )); then
				_LINUX_DISTRO=$(cat /etc/redhat-release | grep "^NAME" | sed -e 's/"//g' -e 's/NAME=//' | awk '{print $1}')
			fi 
		fi 
	fi 
	_LINUX_DISTRO="${_LINUX_DISTRO,,}"

	readonly OS_TYPE="${_OS_TYPE}"
	readonly LINUX_DISTRO="${_LINUX_DISTRO}"
}

getOSType()
{
	echo "${OS_TYPE}"
}

getDistroType()
{
	echo "${LINUX_DISTRO}"
} 

isSwapEnabled()
{
	if (( $(swapon --show | wc -l) > 1 )); then
		echo 1
	else
		echo 0
	fi
}

disableSwap()
{
	if (( $(isSwapEnabled) )); then
		if (( $(swapoff -a) )); then
			echo 0
		else
			if (( $(sed -i '/swap/s/^/#/' /etc/fstab) )); then
				echo 0
			else
				echo 1
			fi
		fi
	else
		echo 1
        fi 
}

mountIso()
{
	local isoFile=${1}
	local mountPoint=${2}
	if [ -z "${isoFile}" ]; then
		abort "ISO file name not provide."
	fi
	if [ ! -f "${isoFile}" ]; then
		abort "ISO file [${isoFile}] doesn't exist."
	fi
	if [ -z "${mountPoint}" ]; then
		abort "Mount point name not provide."
	fi
	if [ ! -d "${mountPoint}" ]; then
		abort "Mount point [${mountPoint}] doesn't exist."
	fi
	SUDO mount -v -t iso9660 -o loop ${isoFile} ${mountPoint} > /dev/null 2>&1
	if (( $? )); then
		abort "Failed to mount [${isoFile}] to mount point [${mountPoint}]"
	fi
}

isMounted()
{
	local mountPoint=${1}
	if [ -z "${mountPoint}" ]; then
		abort "Mount point name not provide."
	fi
	if (( $(mountpoint -q ${mountPoint}) )); then
		echo 0
	else
		echo 1
	fi 
}

unmount()
{
	local mountPoint=${1}
	if [ -z "${mountPoint}" ]; then
		abort "Mount point name not provide."
	fi
	if (( ! $(mountpoint -q ${mountPoint}; echo $?) )); then
		${SUDO} umount ${mountPoint} > /dev/null 2>&1
		if (( $? )); then
			abort "Failed to unmount mount point [${mountPoint}]"
		fi
	fi
} 

__initSystemLibrary

#::END::
