#!/bin/bash
#
# Bash library for systemd services
#
# 1 = TRUE
# 0 = FALSE
#
# Dependency: bash-lib-logging
#

__initServiceLibrary()
{
	(( ${__SERVICE_LIB_INITIALIZED__} )) && return
	readonly __SERVICE_LIB_INITIALIZED__=1 
}

isServiceExist()
{
	local service=${1}
	if [ ! -z ${service} ]; then
		if (( $(systemctl list-units --full --all 2> /dev/null | grep -Fq "${service}"; echo $?) == 0 )); then
			 echo 1
		else
			echo 0
		fi
	else
		abort "[isServiceExist]: Service name not provided"
	fi
}

isServiceEnabled()
{
	local service=$1
	if [ ! -z ${service} ]; then
		if (( $(systemctl is-enabled -q ${service} > /dev/null 2>&1; echo $?) == 0 )); then
			echo 1
		else
			echo 0
		fi
	else
		abort "[isServiceEnabled]: Service name not provided"
	fi
}

isServiceActive()
{
	local service=$1
	if [ ! -z ${service} ]; then
		if (( $(systemctl is-active -q ${service} > /dev/null 2>&1; echo $?) == 0 )); then
			echo 1
		else
			echo 0
		fi
	else
		abort "[isServiceActive]: Service name not provided"
	fi
}

enableService()
{
	local service=${1}
	if [ ! -z ${service} ]; then
		if (( $(systemctl enable -q "${service}") )); then
			echo 0
		else
			if (( $(isServiceEnabled "${service}") )); then
				echo 1
			else
				echo 0
			fi
		fi
	else
		abort "[enableService]: Service name not provided"
	fi
}

disableService()
{
	local service=${1}
	if [ ! -z ${service} ]; then
		if (( $(systemctl disable -q "${service}" && systemctl mask -q --now "${service}") )); then
			echo 0
		else
			if (( $(isServiceEnabled "${service}") )); then
				echo 0
			else
				echo 1
			fi
		fi
	else
		abort "[disableService]: Service name not provided"
	fi
}

startService()
{
	local service=${1}
	if [ ! -z ${service} ]; then
		if (( $(systemctl start -q "${service}") )); then
			echo 0
		else
			echo 1
		fi
	else
		abort "[startService]: Service name not provided"
	fi
}

stopService()
{
	local service=${1}
	if [ ! -z ${service} ]; then
		if (( $(systemctl stop -q "${service}") )); then
			echo 0
		else
			echo 1
		fi
	else
		abort "[stopService]: Service name not provided"
	fi
} 

areAllServicesExist()
{
	local servicesList=$1
	local areAllServicesExist_=1
	local nonExistentServiceList=""
	for service in ${servicesList//,/ }; do
		if (( ! $(isServiceExist ${service}) )); then
			areAllServicesExist_=0
			nonExistentServiceList="${nonExistentServiceList} ${service}"
		fi
	done
	echo ${nonExistentServiceList}
	if (( ! ${areAllServicesExist_} )); then
		return -1
	fi
} 

areAllServicesEnabled()
{
	local servicesList=$1
	local areAllServicesEnabled_=1
	local disabledServicesList=""
	for service in ${servicesList//,/ }; do
		if (( ! $(isServiceEnabled ${service}) )); then
			areAllServicesEnabled_=0
			disabledServicesList="${disabledServicesList} ${service}"
		fi
	done
	echo ${disabledServicesList}
	if (( ! ${areAllServicesEnabled_} )); then
		return -1
	fi
}

areAllServicesActive()
{
	local servicesList=$1
	local areAllServicesActive_=1
	local inactiveServicesList=""
	for service in ${servicesList//,/ }; do
		if (( ! $(isServiceActive ${service}) )); then
			areAllServicesActive_=0
			inactiveServicesList="${inactiveServicesList} ${service}"
		fi
	done
	echo ${inactiveServicesList}
	if (( ! ${areAllServicesActive_} )); then
		return -1
	fi
}

areAllServicesInactive()
{
	local servicesList=$1
	local areAllServicesInactive_=1
	local activeServicesList=""
	for service in ${servicesList//,/ }; do
		if (( $(isServiceActive ${service}) )); then
			areAllServicesInactive_=0
			activeServicesList="${activeServicesList} ${service}"
		fi
	done
	echo ${activeServicesList}
	if (( ! ${areAllServicesInactive_} )); then
		return -1
	fi
}

waitForServiceToBeActive()
{
	local service=$1
	local maxCheckCount=$2
	local checkInterval=$3
	for checkCount in $(seq 1 ${maxCheckCount}); do
		if (( ! $(isServiceActive ${service}) )); then
			log "Wating ${checkInterval} seconds for ${service} to become active..."
			sleep ${checkInterval}
		fi
	done
	if (( ! $(isServiceActive ${service}) )); then
		return -1
	fi
}

waitForListOfServicesToBeActive()
{
	local waitForServicesList=$1
	local nonExistentServicesList
	local disabledServicesList
	local inactiveServicesList
	local callStatus

	nonExistentServicesList=$(areAllServicesExist "${waitForServicesList}")
	callStatus=$?
	if (( ${callStatus} )); then
		log "Not all services exist. Non-existent services: ${nonExistentServicesList}"
		return -1
	fi
	disabledServicesList=$(areAllServicesEnable "${waitForServicesList}")
	callStatus=$?
	if (( ${callStatus} )); then
		log "Not all services enabled. Services not enabled: ${disabledServicesList}"
		return -1
	fi
	inactiveServicesList=$(areAllServicesActive "${waitForServicesList}")
	callStatus=$?
	if (( ${callStatus} )); then
		log "Not all services yet active. Services not yet active: ${inactiveServicesList}"
		log "Waiting for services to become active"
		for waitForService in ${inactiveServicesList//,/ } ; do
			if (( ! $(isServiceActive ${waitForService}) )); then
				log "${waitForService} is not active."
				waitForServiceToBeActive ${waitForService}
				callStatus=$?
				if (( ${callStatus} )); then
					log "Not all services are yet active."
					return -1
				else
					log "[${waitForService}] service is now active."
				fi
			fi
		done
	fi
}

waitForServiceToBeInactive()
{
	local service=$1
	local maxCheckCount=$2
	local checkInterval=$3
	for checkCount in $(seq 1 ${maxCheckCount}); do
		if (( $(isServiceActive ${service}) )); then
			log "Wating ${checkInterval} seconds for ${service} to become inactive..."
			sleep ${checkInterval}
		fi
	done
	if (( $(isServiceActive ${service}) )); then
		return -1
	fi
}

waitForListOfServicesToBeInactive()
{
	local waitForServicesList=$1
	local nonExistentServicesList
	local disabledServicesList
	local activeServicesList
	local callStatus

	nonExistentServicesList=$(areAllServicesExist "${waitForServicesList}")
	callStatus=$?
	if (( ${callStatus} )); then
		log "Not all services exist. Non-existent services: ${nonExistentServicesList}"
		return -1
	fi
	disabledServicesList=$(areAllServicesEnable "${waitForServicesList}")
	callStatus=$?
	if (( ${callStatus} )); then
		log "Not all services enabled. Services not enabled: ${disabledServicesList}"
		return -1
	fi
	activeServicesList=$(areAllServicesActive "${waitForServicesList}")
	callStatus=$?
	if (( ${callStatus} )); then
		log "Not all services yet inactive. Services not yet inactive: ${activeServicesList}"
		log "Waiting for services to become inactive"
		for waitForService in ${activeServicesList//,/ } ; do
			if (( $(isServiceActive ${waitForService}) )); then
				log "${waitForService} is not inactive."
				waitForServiceToBeInactive ${waitForService}
				callStatus=$?
				if (( ${callStatus} )); then
					log "Not all services are yet inactive."
					return -1
				else
					log "[${waitForService}] service is now inactive."
				fi
			fi
		done
	fi
}

__initServiceLibrary

#::END::
